using System;
namespace HeapSortDemo
{
    public class example
    {
        static void heapSort(int[] arr, int n)
        {
            for (int i = n / 2 - 1; i >= 0; i--) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение true
                heapify(arr, n, i); // присвоение аргументов
            for (int i = n - 1; i >= 0; i--) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение true
            {
                int temp = arr[0]; // объявление переменной и присвоение ей лок.переменную arr[0]
                arr[0] = arr[i]; // присвоение ей лок.переменную arr[0]
                arr[i] = temp; // присвоение ей лок.переменную arr[0]
                heapify(arr, i, 0); // присвоение аргументов
            }
        }
        static void heapify(int[] arr, int n, int i)
        {
            int largest = i; // объявление переменной и присвоение ей значения i
            int left = 2 * i + 1; // объявление переменной целого типа и вычисления
            int right = 2 * i + 2; // объявление переменной целого типа и вычисления
            if (left < n && arr[left] > arr[largest]) // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
                largest = left; // присвоение переменной значения другой лок.переменной
            if (right < n && arr[right] > arr[largest]) // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
                largest = right; // присвоение переменной значения другой лок.переменной
            if (largest != i) // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
            {
                int swap = arr[i]; // объявление переменной и присвоение ей лок.переменную arr[i]
                arr[i] = arr[largest]; // присвоение локальной переменной зависящей от i значение лок.переменной зависящей от largest
                arr[largest] = swap; // присвоение локальной переменной зависящей от largest значение лок.переменной swap
                heapify(arr, n, largest); // присвоение аргументов
            }
        }
        public static void Main()
        {
            int[] arr = { 55, 25, 89, 34, 12, 19, 78, 95, 1, 100 }; // объявление одноместного массива
            int n = 10, i; // присвоение лок.переменной значения 10
            Console.WriteLine("Heap Sort"); // вывод на экран строки "..."
            Console.Write("Initial array is: "); // вывод на экран строки "..."
            for (i = 0; i < n; i++) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение true
            {
                Console.Write(arr[i] + " "); // вывод на экран строки "..." с указанным значением
            }
            heapSort(arr, 10); // присвоение аргументов
            Console.Write("\nSorted Array is: "); // вывод на экран строки "..." с указанным значением
            for (i = 0; i < n; i++) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение true
            {
                Console.Write(arr[i] + " "); // вывод на экран строки "..." с указанным значением
            }
        }
    }
}
